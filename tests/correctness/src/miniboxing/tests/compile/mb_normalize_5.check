Specializing class Sp5Tuple2...

  // interface:
  abstract trait Sp5Tuple2[U, V] extends Object {
  }

  // specialized class:
  class Sp5Tuple2_JJ[Usp, Vsp] extends Sp5Tuple2[Usp,Vsp] {
    def <init>(val Sp5Tuple2_U_TypeTag: Byte,val Sp5Tuple2_V_TypeTag: Byte,u: Long,v: Long): miniboxing.tests.correctness.Sp5Tuple2_JJ[Usp,Vsp] // is a specialized implementation of constructor Sp5Tuple2
    private[this] val Sp5Tuple2_U_TypeTag: Byte                            // no info
    private[this] val Sp5Tuple2_V_TypeTag: Byte                            // no info
    private[this] val u: Long                                              // is a specialized implementation of value u
    private[this] val v: Long                                              // is a specialized implementation of value v
  }

  // specialized class:
  class Sp5Tuple2_LJ[Usp, Vsp] extends Sp5Tuple2[Usp,Vsp] {
    def <init>(val Sp5Tuple2_V_TypeTag: Byte,u: Usp,v: Long): miniboxing.tests.correctness.Sp5Tuple2_LJ[Usp,Vsp] // is a specialized implementation of constructor Sp5Tuple2
    private[this] val Sp5Tuple2_V_TypeTag: Byte                            // no info
    private[this] val u: Usp                                               // is a specialized implementation of value u
    private[this] val v: Long                                              // is a specialized implementation of value v
  }

  // specialized class:
  class Sp5Tuple2_JL[Usp, Vsp] extends Sp5Tuple2[Usp,Vsp] {
    def <init>(val Sp5Tuple2_U_TypeTag: Byte,u: Long,v: Vsp): miniboxing.tests.correctness.Sp5Tuple2_JL[Usp,Vsp] // is a specialized implementation of constructor Sp5Tuple2
    private[this] val Sp5Tuple2_U_TypeTag: Byte                            // no info
    private[this] val u: Long                                              // is a specialized implementation of value u
    private[this] val v: Vsp                                               // is a specialized implementation of value v
  }

  // specialized class:
  class Sp5Tuple2_LL[Usp, Vsp] extends Sp5Tuple2[Usp,Vsp] {
    def <init>(u: Usp,v: Vsp): miniboxing.tests.correctness.Sp5Tuple2_LL[Usp,Vsp] // is a specialized implementation of constructor Sp5Tuple2
    private[this] val u: Usp                                               // is a specialized implementation of value u
    private[this] val v: Vsp                                               // is a specialized implementation of value v
  }




[[syntax trees at end of                   minibox]] // newSource1.scala
package miniboxing.tests.correctness {
  abstract trait Sp5Tuple2[@miniboxing.plugin.minispec U >: Nothing <: Any, @miniboxing.plugin.minispec V >: Nothing <: Any] extends Object;
  object Sp5Test extends Object {
    def <init>(): miniboxing.tests.correctness.Sp5Test.type = {
      Sp5Test.super.<init>();
      ()
    };
    def normalize[@miniboxing.plugin.minispec S >: Nothing <: Any, @miniboxing.plugin.minispec T >: Nothing <: Any](s: S, t: T): miniboxing.tests.correctness.Sp5Tuple2[S,T] = {
      def foo(): miniboxing.tests.correctness.Sp5Tuple2[S,T] = {
        def bar(): miniboxing.tests.correctness.Sp5Tuple2[S,T] = new miniboxing.tests.correctness.Sp5Tuple2_LL[S,T](s, t);
        bar()
      };
      foo()
    };
    def normalize_n_JJ[@miniboxing.plugin.minispec S >: Nothing <: Any, @miniboxing.plugin.minispec T >: Nothing <: Any](normalize_S_TypeTag: Byte, normalize_T_TypeTag: Byte, s: Long, t: Long): miniboxing.tests.correctness.Sp5Tuple2[S,T] = {
      def foo(): miniboxing.tests.correctness.Sp5Tuple2[S,T] = {
        def bar(): miniboxing.tests.correctness.Sp5Tuple2[S,T] = new miniboxing.tests.correctness.Sp5Tuple2_JJ[S,T](normalize_S_TypeTag, normalize_T_TypeTag, s, t);
        bar()
      };
      foo()
    };
    def normalize_n_JL[@miniboxing.plugin.minispec S >: Nothing <: Any, @miniboxing.plugin.minispec T >: Nothing <: Any](normalize_S_TypeTag: Byte, s: Long, t: T): miniboxing.tests.correctness.Sp5Tuple2[S,T] = {
      def foo(): miniboxing.tests.correctness.Sp5Tuple2[S,T] = {
        def bar(): miniboxing.tests.correctness.Sp5Tuple2[S,T] = new miniboxing.tests.correctness.Sp5Tuple2_JL[S,T](normalize_S_TypeTag, s, t);
        bar()
      };
      foo()
    };
    def normalize_n_LJ[@miniboxing.plugin.minispec S >: Nothing <: Any, @miniboxing.plugin.minispec T >: Nothing <: Any](normalize_T_TypeTag: Byte, s: S, t: Long): miniboxing.tests.correctness.Sp5Tuple2[S,T] = {
      def foo(): miniboxing.tests.correctness.Sp5Tuple2[S,T] = {
        def bar(): miniboxing.tests.correctness.Sp5Tuple2[S,T] = new miniboxing.tests.correctness.Sp5Tuple2_LJ[S,T](normalize_T_TypeTag, s, t);
        bar()
      };
      foo()
    }
  };
  class Sp5Tuple2_JJ[Usp >: Nothing <: Any, Vsp >: Nothing <: Any] extends Object with miniboxing.tests.correctness.Sp5Tuple2[Usp,Vsp] {
    def <init>(Sp5Tuple2_U_TypeTag: Byte, Sp5Tuple2_V_TypeTag: Byte, u: Long, v: Long): miniboxing.tests.correctness.Sp5Tuple2_JJ[Usp,Vsp] = {
      Sp5Tuple2_JJ.super.<init>();
      ()
    };
    <paramaccessor> private[this] val Sp5Tuple2_U_TypeTag: Byte = _;
    <paramaccessor> private[this] val Sp5Tuple2_V_TypeTag: Byte = _;
    <paramaccessor> private[this] val u: Long = _;
    <paramaccessor> private[this] val v: Long = _
  };
  class Sp5Tuple2_JL[Usp >: Nothing <: Any, Vsp >: Nothing <: Any] extends Object with miniboxing.tests.correctness.Sp5Tuple2[Usp,Vsp] {
    def <init>(Sp5Tuple2_U_TypeTag: Byte, u: Long, v: Vsp): miniboxing.tests.correctness.Sp5Tuple2_JL[Usp,Vsp] = {
      Sp5Tuple2_JL.super.<init>();
      ()
    };
    <paramaccessor> private[this] val Sp5Tuple2_U_TypeTag: Byte = _;
    <paramaccessor> private[this] val u: Long = _;
    <paramaccessor> private[this] val v: Vsp = _
  };
  class Sp5Tuple2_LJ[Usp >: Nothing <: Any, Vsp >: Nothing <: Any] extends Object with miniboxing.tests.correctness.Sp5Tuple2[Usp,Vsp] {
    def <init>(Sp5Tuple2_V_TypeTag: Byte, u: Usp, v: Long): miniboxing.tests.correctness.Sp5Tuple2_LJ[Usp,Vsp] = {
      Sp5Tuple2_LJ.super.<init>();
      ()
    };
    <paramaccessor> private[this] val Sp5Tuple2_V_TypeTag: Byte = _;
    <paramaccessor> private[this] val u: Usp = _;
    <paramaccessor> private[this] val v: Long = _
  };
  class Sp5Tuple2_LL[Usp >: Nothing <: Any, Vsp >: Nothing <: Any] extends Object with miniboxing.tests.correctness.Sp5Tuple2[Usp,Vsp] {
    def <init>(u: Usp, v: Vsp): miniboxing.tests.correctness.Sp5Tuple2_LL[Usp,Vsp] = {
      Sp5Tuple2_LL.super.<init>();
      ()
    };
    <paramaccessor> private[this] val u: Usp = _;
    <paramaccessor> private[this] val v: Vsp = _
  }
}

[Now checking: minibox]
