[[syntax trees at end of                   minibox]] // newSource1.scala
package miniboxing.tests.compile {
  abstract trait TN[@miniboxing.plugin.minispec T >: Nothing <: Any] extends Object {
    <stable> <accessor> <paramaccessor> def t(): T;
    def foo(): miniboxing.tests.compile.TN[T];
    def foo_J(TN_T_TypeTag: Byte): miniboxing.tests.compile.TN[T];
    <stable> <accessor> <paramaccessor> def t_J(TN_T_TypeTag: Byte): Long
  };
  object TestNewRewire extends Object {
    def <init>(): miniboxing.tests.compile.TestNewRewire.type = {
      TestNewRewire.super.<init>();
      ()
    };
    def test[T >: Nothing <: Any](t: T): String = {
      new miniboxing.tests.compile.TN_J[Int](5, MiniboxConversions.this.box2minibox_tt[Int(1)](1, 5));
      new miniboxing.tests.compile.TN_L[String]("xxx");
      new miniboxing.tests.compile.TN_L[T](t);
      new String("yyy")
    }
  };
  class TN_J[Tsp >: Nothing <: Any] extends Object with miniboxing.tests.compile.TN[Tsp] {
    def <init>(TN_T_TypeTag: Byte, t: Long): miniboxing.tests.compile.TN_J[Tsp] = {
      TN_J.super.<init>();
      ()
    };
    def foo(): miniboxing.tests.compile.TN[Tsp] = TN_J.this.foo_J(TN_J.this.TN_T_TypeTag);
    def foo_J(TN_T_TypeTag: Byte): miniboxing.tests.compile.TN[Tsp] = new miniboxing.tests.compile.TN_J[Tsp](TN_T_TypeTag, TN_J.this.t_J(TN_T_TypeTag));
    <paramaccessor> private[this] val TN_T_TypeTag: Byte = _;
    <paramaccessor> private[this] val t: Long = _;
    <stable> <accessor> <paramaccessor> def t(): Tsp = MiniboxConversions.this.minibox2box[Tsp](TN_J.this.t_J(TN_J.this.TN_T_TypeTag), TN_J.this.TN_T_TypeTag);
    <stable> <accessor> <paramaccessor> def t_J(TN_T_TypeTag: Byte): Long = TN_J.this.t
  };
  class TN_L[Tsp >: Nothing <: Any] extends Object with miniboxing.tests.compile.TN[Tsp] {
    def <init>(t: Tsp): miniboxing.tests.compile.TN_L[Tsp] = {
      TN_L.super.<init>();
      ()
    };
    def foo(): miniboxing.tests.compile.TN[Tsp] = new miniboxing.tests.compile.TN_L[Tsp](TN_L.this.t());
    def foo_J(TN_T_TypeTag: Byte): miniboxing.tests.compile.TN[Tsp] = TN_L.this.foo();
    <paramaccessor> private[this] val t: Tsp = _;
    <stable> <accessor> <paramaccessor> def t(): Tsp = TN_L.this.t;
    <stable> <accessor> <paramaccessor> def t_J(TN_T_TypeTag: Byte): Long = MiniboxConversions.this.box2minibox_tt[Tsp](TN_L.this.t(), TN_T_TypeTag)
  }
}

[Now checking: minibox]
