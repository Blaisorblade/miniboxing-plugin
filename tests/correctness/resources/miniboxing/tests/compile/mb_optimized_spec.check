Specializing class OptMeee...
  // interface:
  abstract trait OptMeee[X, Y] extends Object {
    def nfoo3(y: Y): Y
    def nfoo4(xs: List[X]): Array[X]
    def yfoo1$J(val X$TypeTag: Byte,x: X @storage[Long],y: Y): X @storage[Long]
    def yfoo1(x: X,y: Y): X
    def yfoo2$J(val X$TypeTag: Byte,y: Y): X @storage[Long]
    def yfoo2(y: Y): X
  }
  // specialized class:
  class OptMeee$J[Xsp, Ysp] extends OptMeee[Xsp,Ysp] {
    def <init>(val miniboxing|tests|compile|OptMeee$J|X$TypeTag: Byte): miniboxing.tests.compile.OptMeee$J[Xsp,Ysp] // is a specialized implementation of constructor OptMeee
    def nfoo3(y: Ysp): Ysp                                                 // is a specialized implementation of method nfoo3
    def nfoo4(xs: List[Xsp]): Array[Xsp]                                   // is a specialized implementation of method nfoo4
    def yfoo1$J(val X$TypeTag: Byte,x: Xsp @storage[Long],y: Ysp): Xsp @storage[Long] // is a specialized implementation of method yfoo1
    def yfoo1(x: Xsp,y: Ysp): Xsp                                          // is a forwarder to the specialized member
    def yfoo2$J(val X$TypeTag: Byte,y: Ysp): Xsp @storage[Long]            // is a specialized implementation of method yfoo2
    def yfoo2(y: Ysp): Xsp                                                 // is a forwarder to the specialized member
    private[this] val miniboxing|tests|compile|OptMeee$J|X$TypeTag: Byte   // is a type tag
  }
  // specialized class:
  class OptMeee$L[Xsp, Ysp] extends OptMeee[Xsp,Ysp] {
    def <init>(): miniboxing.tests.compile.OptMeee$L[Xsp,Ysp]              // is a specialized implementation of constructor OptMeee
    def nfoo3(y: Ysp): Ysp                                                 // is a specialized implementation of method nfoo3
    def nfoo4(xs: List[Xsp]): Array[Xsp]                                   // is a specialized implementation of method nfoo4
    def yfoo1$J(val X$TypeTag: Byte,x: Xsp @storage[Long],y: Ysp): Xsp @storage[Long] // is a forwarder to the specialized member
    def yfoo1(x: Xsp,y: Ysp): Xsp                                          // is a specialized implementation of method yfoo1
    def yfoo2$J(val X$TypeTag: Byte,y: Ysp): Xsp @storage[Long]            // is a forwarder to the specialized member
    def yfoo2(y: Ysp): Xsp                                                 // is a specialized implementation of method yfoo2
  }
[Now checking: minibox-inject]
[Now checking: minibox-bridge]
[Not checkable: minibox-coerce]
Miniboxing plugin warning: Optimizing `MbArray` is only possible if you allow the plugin to use both long and double encodings (remove `P:minibox:Yone-way` compiler option). `MbArray`-s will be generic and will box.
Miniboxing plugin warning: Optimizing `MbTuple` is only possible if you allow the plugin to use both long and double encodings (remove `P:minibox:Yone-way` compiler option). `MbTuple`-s will be generic and will box.
[Now checking: minibox-commit]