[[syntax trees at end of            minibox-commit]] // newSource1.scala
package miniboxing.tests.compile.bug53 {
  object Test2 extends Object {
    def <init>(): miniboxing.tests.compile.bug53.Test2.type = {
      Test2.super.<init>();
      ()
    };
    class X extends Object {
      def <init>(): miniboxing.tests.compile.bug53.Test2.X = {
        X.super.<init>();
        ()
      };
      abstract trait BUG53[@miniboxed T] extends Object;
      class BUG53_J[Tsp] extends Object with X.this.BUG53[Tsp] {
        <paramaccessor> private[this] val miniboxing|tests|compile|bug53|Test2|X|BUG53_J|T_TypeTag: Byte = _;
        def <init>(miniboxing|tests|compile|bug53|Test2|X|BUG53_J|T_TypeTag: Byte): X.this.BUG53_J[Tsp] = {
          BUG53_J.super.<init>();
          ()
        }
      };
      class BUG53_L[Tsp] extends Object with X.this.BUG53[Tsp] {
        def <init>(): X.this.BUG53_L[Tsp] = {
          BUG53_L.super.<init>();
          ()
        }
      }
    }
  }
}
newSource1.scala:1: warning: Optimizing `MbArray` is only possible if you allow the plugin to use both {long, double} encodings (Y:minibox:Ytwo-way). `MbArray` will be generic and will box.
package miniboxing.tests.compile.bug53
                                 ^