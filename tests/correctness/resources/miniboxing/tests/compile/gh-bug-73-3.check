newSource1.scala:6: warning: The following code could benefit from miniboxing specialization if the type parameter A of class C2 would be marked as "@miniboxed A" (it would be used to instantiate miniboxed type parameter A of trait C1)
trait C2[A] extends C1[A] {
      ^
[[syntax trees at end of            minibox-commit]] // newSource1.scala
package miniboxing.tests.compile.bug73.ver3 {
  abstract trait C1[@miniboxed A] extends Object {
    def head(): A;
    def head$D(A$TypeTag: Byte): Double;
    def head$J(A$TypeTag: Byte): Long
  };
  abstract trait C1$D[Asp] extends Object with miniboxing.tests.compile.bug73.ver3.C1[Asp] {
    def miniboxing|tests|compile|bug73|ver3|C1$D|A$TypeTag(): Byte;
    def head(): Asp = MiniboxConversionsDouble.this.minibox2box[Asp](C1$D.this.head$D(C1$D.this.miniboxing|tests|compile|bug73|ver3|C1$D|A$TypeTag()), C1$D.this.miniboxing|tests|compile|bug73|ver3|C1$D|A$TypeTag());
    def head$D(A$TypeTag: Byte): Double = MiniboxConversionsDouble.this.box2minibox_tt[Asp](scala.sys.`package`.error(""), A$TypeTag);
    def head$J(A$TypeTag: Byte): Long = MiniboxConversions.this.unreachableConversion[Nothing]("Double", "Long")
  };
  abstract trait C1$J[Asp] extends Object with miniboxing.tests.compile.bug73.ver3.C1[Asp] {
    def miniboxing|tests|compile|bug73|ver3|C1$J|A$TypeTag(): Byte;
    def head(): Asp = MiniboxConversionsLong.this.minibox2box[Asp](C1$J.this.head$J(C1$J.this.miniboxing|tests|compile|bug73|ver3|C1$J|A$TypeTag()), C1$J.this.miniboxing|tests|compile|bug73|ver3|C1$J|A$TypeTag());
    def head$D(A$TypeTag: Byte): Double = MiniboxConversions.this.unreachableConversion[Nothing]("Long", "Double");
    def head$J(A$TypeTag: Byte): Long = MiniboxConversionsLong.this.box2minibox_tt[Asp](scala.sys.`package`.error(""), A$TypeTag)
  };
  abstract trait C1$L[Asp] extends Object with miniboxing.tests.compile.bug73.ver3.C1[Asp] {
    def head(): Asp = scala.sys.`package`.error("");
    def head$D(A$TypeTag: Byte): Double = MiniboxConversionsDouble.this.box2minibox_tt[Asp](C1$L.this.head(), A$TypeTag);
    def head$J(A$TypeTag: Byte): Long = MiniboxConversionsLong.this.box2minibox_tt[Asp](C1$L.this.head(), A$TypeTag)
  };
  abstract trait C2[A] extends Object with miniboxing.tests.compile.bug73.ver3.C1$L[A] {
    <superaccessor> private def super$head(): A;
    def /*C2*/$init$(): Unit = {
      ()
    };
    override def head(): A = C2.this.super$head()
  };
  class C3 extends Object with miniboxing.tests.compile.bug73.ver3.C2[Char] {
    def <init>(): miniboxing.tests.compile.bug73.ver3.C3 = {
      C3.super.<init>();
      ()
    }
  }
}
[Now checking: minibox-commit]